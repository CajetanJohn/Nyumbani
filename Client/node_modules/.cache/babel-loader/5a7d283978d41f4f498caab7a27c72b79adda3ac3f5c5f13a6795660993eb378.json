{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUpload() {\n  _s();\n  const [images, setImages] = useState([]);\n  const handleImageUpload = event => {\n    const selectedImages = Array.from(event.target.files);\n    const newImages = selectedImages.map(image => {\n      return {\n        file: URL.createObjectURL(image),\n        properties: {\n          text: ''\n        },\n        detected: false\n      };\n    });\n    setImages([...images, ...newImages]);\n  };\n  const handleTextChange = (index, text) => {\n    const updatedImages = [...images];\n    updatedImages[index].properties.text = text;\n    setImages(updatedImages);\n  };\n  const handleDetectProperties = index => {\n    const updatedImages = [...images];\n    const text = updatedImages[index].properties.text;\n    const hashtags = [];\n    const links = [];\n    const words = text.split(' ');\n    words.forEach(word => {\n      if (word.startsWith('#')) {\n        hashtags.push(word.substring(1));\n      } else if (word.startsWith('@')) {\n        links.push(word.substring(1));\n      }\n    });\n    updatedImages[index].properties.hashtags = hashtags;\n    updatedImages[index].properties.links = links;\n    updatedImages[index].detected = true;\n    setImages(updatedImages);\n  };\n  const handleLogData = () => {\n    console.log(images);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      multiple: true,\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.file,\n          alt: `Image ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter text (e.g., #hashtag @link)\",\n          value: image.properties.text,\n          onChange: e => handleTextChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), image.detected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDetectProperties(index),\n            children: \"Confirm Detection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogData,\n      children: \"Log Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUpload, \"mOoWwfdsCKBG2MIVzAXM/MEStpE=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUpload","_s","images","setImages","handleImageUpload","event","selectedImages","Array","from","target","files","newImages","map","image","file","URL","createObjectURL","properties","text","detected","handleTextChange","index","updatedImages","handleDetectProperties","hashtags","links","words","split","forEach","word","startsWith","push","substring","handleLogData","console","log","children","type","accept","multiple","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","placeholder","value","e","onClick","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Style.css';\nfunction ImageUpload() {\n  const [images, setImages] = useState([]);\n\n  const handleImageUpload = (event) => {\n    const selectedImages = Array.from(event.target.files);\n\n    const newImages = selectedImages.map((image) => {\n      return {\n        file: URL.createObjectURL(image),\n        properties: {\n          text: '',\n        },\n        detected: false,\n      };\n    });\n\n    setImages([...images, ...newImages]);\n  };\n\n  const handleTextChange = (index, text) => {\n    const updatedImages = [...images];\n    updatedImages[index].properties.text = text;\n    setImages(updatedImages);\n  };\n\n  const handleDetectProperties = (index) => {\n    const updatedImages = [...images];\n    const text = updatedImages[index].properties.text;\n\n    const hashtags = [];\n    const links = [];\n\n    const words = text.split(' ');\n    words.forEach((word) => {\n      if (word.startsWith('#')) {\n        hashtags.push(word.substring(1));\n      } else if (word.startsWith('@')) {\n        links.push(word.substring(1));\n      }\n    });\n\n    updatedImages[index].properties.hashtags = hashtags;\n    updatedImages[index].properties.links = links;\n    updatedImages[index].detected = true;\n\n    setImages(updatedImages);\n  };\n\n  const handleLogData = () => {\n    console.log(images);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\"image/*\" multiple onChange={handleImageUpload}/>\n      <div className=\"image-preview\">\n        {images.map((image, index) => (\n          <div key={index}>\n            <img src={image.file} alt={`Image ${index}`} />\n            <textarea\n              placeholder=\"Enter text (e.g., #hashtag @link)\"\n              value={image.properties.text}\n              onChange={(e) => handleTextChange(index, e.target.value)}\n            />\n            {image.detected ? (\n              <div>\n                <button onClick={() => handleDetectProperties(index)}>\n                  Confirm Detection\n                </button>\n              </div>\n            ) : null}\n          </div>\n        ))}\n      </div>\n      <button onClick={handleLogData}>Log Data</button>\n    </div>\n  );\n}\n\nexport default ImageUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}