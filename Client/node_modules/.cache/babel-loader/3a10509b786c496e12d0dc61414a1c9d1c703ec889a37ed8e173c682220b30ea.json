{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Step2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Step2 = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [currentImage, setCurrentImage] = useState({\n    Image: '',\n    links: {},\n    Date: '',\n    srcUser: ''\n  });\n  const handleImageChange = event => {\n    const image = event.target.files[0];\n    setCurrentImage({\n      ...currentImage,\n      Image: image\n    });\n  };\n  const handleAddLink = () => {\n    const {\n      links\n    } = currentImage;\n    const linkCount = Object.keys(links).length;\n    if (linkCount < 5) {\n      setCurrentImage({\n        ...currentImage,\n        links: {\n          ...links,\n          [`link${linkCount + 1}`]: ''\n        }\n      });\n    }\n  };\n  const handleLinkChange = (key, value) => {\n    setCurrentImage({\n      ...currentImage,\n      links: {\n        ...currentImage.links,\n        [key]: value\n      }\n    });\n  };\n  const handleRemoveLink = key => {\n    const {\n      [key]: _,\n      ...remainingLinks\n    } = currentImage.links;\n    setCurrentImage({\n      ...currentImage,\n      links: remainingLinks\n    });\n  };\n  const handleAddImage = () => {\n    setImages([...images, currentImage]);\n    setCurrentImage({\n      Image: '',\n      links: {},\n      Date: '',\n      srcUser: ''\n    });\n  };\n  const handleRemoveImage = index => {\n    const updatedImages = images.filter((_, i) => i !== index);\n    setImages(updatedImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Image Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), currentImage.Image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(currentImage.Image),\n        alt: \"Uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link-inputs\",\n        children: [Object.entries(currentImage.links).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: `Link ${index + 1}`,\n            value: value,\n            onChange: e => handleLinkChange(key, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveLink(key),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddLink,\n          children: \"Add Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Date\",\n        value: currentImage.Date,\n        onChange: e => setCurrentImage({\n          ...currentImage,\n          Date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"srcUser\",\n        value: currentImage.srcUser,\n        onChange: e => setCurrentImage({\n          ...currentImage,\n          srcUser: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddImage,\n        children: \"Add Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-images\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(image.Image),\n          alt: `Image ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), Object.entries(image.links).map(([key, value], linkIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Link \", linkIndex + 1, \": \", value]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", image.Date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"srcUser: \", image.srcUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveImage(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Step2, \"sbZaKid49wtO/Um+2Rtds02syo4=\");\n_c = Step2;\nexport default Step2;\nvar _c;\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Step2","_s","images","setImages","currentImage","setCurrentImage","Image","links","Date","srcUser","handleImageChange","event","image","target","files","handleAddLink","linkCount","Object","keys","length","handleLinkChange","key","value","handleRemoveLink","_","remainingLinks","handleAddImage","handleRemoveImage","index","updatedImages","filter","i","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","className","src","URL","createObjectURL","alt","entries","map","placeholder","e","onClick","linkIndex","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Step2.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./Style.css\"\nconst Step2 = () => {\n  const [images, setImages] = useState([]);\n  const [currentImage, setCurrentImage] = useState({ Image: '', links: {}, Date: '', srcUser: '' });\n\n  const handleImageChange = (event) => {\n    const image = event.target.files[0];\n    setCurrentImage({ ...currentImage, Image: image });\n  };\n\n  const handleAddLink = () => {\n    const { links } = currentImage;\n    const linkCount = Object.keys(links).length;\n    if (linkCount < 5) {\n      setCurrentImage({ ...currentImage, links: { ...links, [`link${linkCount + 1}`]: '' } });\n    }\n  };\n\n  const handleLinkChange = (key, value) => {\n    setCurrentImage({ ...currentImage, links: { ...currentImage.links, [key]: value } });\n  };\n\n  const handleRemoveLink = (key) => {\n    const { [key]: _, ...remainingLinks } = currentImage.links;\n    setCurrentImage({ ...currentImage, links: remainingLinks });\n  };\n\n  const handleAddImage = () => {\n    setImages([...images, currentImage]);\n    setCurrentImage({ Image: '', links: {}, Date: '', srcUser: '' });\n  };\n\n  const handleRemoveImage = (index) => {\n    const updatedImages = images.filter((_, i) => i !== index);\n    setImages(updatedImages);\n  };\n\n  return (\n    <div>\n      <h2>Image Upload</h2>\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n      {currentImage.Image && (\n        <div className=\"image-data\">\n          <img src={URL.createObjectURL(currentImage.Image)} alt=\"Uploaded\" />\n          <div className=\"link-inputs\">\n            {Object.entries(currentImage.links).map(([key, value], index) => (\n              <div key={key}>\n                <input\n                  type=\"text\"\n                  placeholder={`Link ${index + 1}`}\n                  value={value}\n                  onChange={(e) => handleLinkChange(key, e.target.value)}\n                />\n                <button onClick={() => handleRemoveLink(key)}>Remove</button>\n              </div>\n            ))}\n            <button onClick={handleAddLink}>Add Link</button>\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"Date\"\n            value={currentImage.Date}\n            onChange={(e) => setCurrentImage({ ...currentImage, Date: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"srcUser\"\n            value={currentImage.srcUser}\n            onChange={(e) => setCurrentImage({ ...currentImage, srcUser: e.target.value })}\n          />\n          <button onClick={handleAddImage}>Add Image</button>\n        </div>\n      )}\n      {images.length > 0 && (\n        <div className=\"uploaded-images\">\n          <h3>Uploaded Images:</h3>\n          {images.map((image, index) => (\n            <div key={index} className=\"uploaded-image\">\n              <img src={URL.createObjectURL(image.Image)} alt={`Image ${index + 1}`} />\n              {Object.entries(image.links).map(([key, value], linkIndex) => (\n                <p key={key}>Link {linkIndex + 1}: {value}</p>\n              ))}\n              <p>Date: {image.Date}</p>\n              <p>srcUser: {image.srcUser}</p>\n              <button onClick={() => handleRemoveImage(index)}>Remove</button>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Step2;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACpB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC;IAAES,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAC,CAAC;IAAEC,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAEjG,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnCT,eAAe,CAAC;MAAE,GAAGD,YAAY;MAAEE,KAAK,EAAEM;IAAM,CAAC,CAAC;EACpD,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAM;MAAER;IAAM,CAAC,GAAGH,YAAY;IAC9B,MAAMY,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACX,KAAK,CAAC,CAACY,MAAM;IAC3C,IAAIH,SAAS,GAAG,CAAC,EAAE;MACjBX,eAAe,CAAC;QAAE,GAAGD,YAAY;QAAEG,KAAK,EAAE;UAAE,GAAGA,KAAK;UAAE,CAAE,OAAMS,SAAS,GAAG,CAAE,EAAC,GAAG;QAAG;MAAE,CAAC,CAAC;IACzF;EACF,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IACvCjB,eAAe,CAAC;MAAE,GAAGD,YAAY;MAAEG,KAAK,EAAE;QAAE,GAAGH,YAAY,CAACG,KAAK;QAAE,CAACc,GAAG,GAAGC;MAAM;IAAE,CAAC,CAAC;EACtF,CAAC;EAED,MAAMC,gBAAgB,GAAIF,GAAG,IAAK;IAChC,MAAM;MAAE,CAACA,GAAG,GAAGG,CAAC;MAAE,GAAGC;IAAe,CAAC,GAAGrB,YAAY,CAACG,KAAK;IAC1DF,eAAe,CAAC;MAAE,GAAGD,YAAY;MAAEG,KAAK,EAAEkB;IAAe,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BvB,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEE,YAAY,CAAC,CAAC;IACpCC,eAAe,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE,CAAC,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;EAClE,CAAC;EAED,MAAMkB,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,aAAa,GAAG3B,MAAM,CAAC4B,MAAM,CAAC,CAACN,CAAC,EAAEO,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC;IAC1DzB,SAAS,CAAC0B,aAAa,CAAC;EAC1B,CAAC;EAED,oBACE9B,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrC,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAE7B;IAAkB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClEhC,YAAY,CAACE,KAAK,iBACjBP,OAAA;MAAKyC,SAAS,EAAC,YAAY;MAAAR,QAAA,gBACzBjC,OAAA;QAAK0C,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACvC,YAAY,CAACE,KAAK,CAAE;QAACsC,GAAG,EAAC;MAAU;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpErC,OAAA;QAAKyC,SAAS,EAAC,aAAa;QAAAR,QAAA,GACzBf,MAAM,CAAC4B,OAAO,CAACzC,YAAY,CAACG,KAAK,CAAC,CAACuC,GAAG,CAAC,CAAC,CAACzB,GAAG,EAAEC,KAAK,CAAC,EAAEM,KAAK,kBAC1D7B,OAAA;UAAAiC,QAAA,gBACEjC,OAAA;YACEsC,IAAI,EAAC,MAAM;YACXU,WAAW,EAAG,QAAOnB,KAAK,GAAG,CAAE,EAAE;YACjCN,KAAK,EAAEA,KAAM;YACbiB,QAAQ,EAAGS,CAAC,IAAK5B,gBAAgB,CAACC,GAAG,EAAE2B,CAAC,CAACnC,MAAM,CAACS,KAAK;UAAE;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,eACFrC,OAAA;YAAQkD,OAAO,EAAEA,CAAA,KAAM1B,gBAAgB,CAACF,GAAG,CAAE;YAAAW,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAPrDf,GAAG;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQR,CACN,CAAC,eACFrC,OAAA;UAAQkD,OAAO,EAAElC,aAAc;UAAAiB,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACNrC,OAAA;QACEsC,IAAI,EAAC,MAAM;QACXU,WAAW,EAAC,MAAM;QAClBzB,KAAK,EAAElB,YAAY,CAACI,IAAK;QACzB+B,QAAQ,EAAGS,CAAC,IAAK3C,eAAe,CAAC;UAAE,GAAGD,YAAY;UAAEI,IAAI,EAAEwC,CAAC,CAACnC,MAAM,CAACS;QAAM,CAAC;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eACFrC,OAAA;QACEsC,IAAI,EAAC,MAAM;QACXU,WAAW,EAAC,SAAS;QACrBzB,KAAK,EAAElB,YAAY,CAACK,OAAQ;QAC5B8B,QAAQ,EAAGS,CAAC,IAAK3C,eAAe,CAAC;UAAE,GAAGD,YAAY;UAAEK,OAAO,EAAEuC,CAAC,CAACnC,MAAM,CAACS;QAAM,CAAC;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC,eACFrC,OAAA;QAAQkD,OAAO,EAAEvB,cAAe;QAAAM,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CACN,EACAlC,MAAM,CAACiB,MAAM,GAAG,CAAC,iBAChBpB,OAAA;MAAKyC,SAAS,EAAC,iBAAiB;MAAAR,QAAA,gBAC9BjC,OAAA;QAAAiC,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxBlC,MAAM,CAAC4C,GAAG,CAAC,CAAClC,KAAK,EAAEgB,KAAK,kBACvB7B,OAAA;QAAiByC,SAAS,EAAC,gBAAgB;QAAAR,QAAA,gBACzCjC,OAAA;UAAK0C,GAAG,EAAEC,GAAG,CAACC,eAAe,CAAC/B,KAAK,CAACN,KAAK,CAAE;UAACsC,GAAG,EAAG,SAAQhB,KAAK,GAAG,CAAE;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACxEnB,MAAM,CAAC4B,OAAO,CAACjC,KAAK,CAACL,KAAK,CAAC,CAACuC,GAAG,CAAC,CAAC,CAACzB,GAAG,EAAEC,KAAK,CAAC,EAAE4B,SAAS,kBACvDnD,OAAA;UAAAiC,QAAA,GAAa,OAAK,EAACkB,SAAS,GAAG,CAAC,EAAC,IAAE,EAAC5B,KAAK;QAAA,GAAjCD,GAAG;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkC,CAC9C,CAAC,eACFrC,OAAA;UAAAiC,QAAA,GAAG,QAAM,EAACpB,KAAK,CAACJ,IAAI;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBrC,OAAA;UAAAiC,QAAA,GAAG,WAAS,EAACpB,KAAK,CAACH,OAAO;QAAA;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BrC,OAAA;UAAQkD,OAAO,EAAEA,CAAA,KAAMtB,iBAAiB,CAACC,KAAK,CAAE;UAAAI,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPxDR,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CA1FID,KAAK;AAAAmD,EAAA,GAALnD,KAAK;AA4FX,eAAeA,KAAK;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}