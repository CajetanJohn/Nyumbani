{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Step2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Step2 = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [currentImage, setCurrentImage] = useState({\n    Image: '',\n    links: {}\n  });\n  const handleImageChange = event => {\n    const image = event.target.files[0];\n    setCurrentImage({\n      ...currentImage,\n      Image: image,\n      Date: new Date().toISOString(),\n      srcUser: `User ${images.length + 1}`\n    });\n  };\n  const handleAddLink = () => {\n    const {\n      links\n    } = currentImage;\n    const linkCount = Object.keys(links).length;\n    if (linkCount < 5) {\n      setCurrentImage({\n        ...currentImage,\n        links: {\n          ...links,\n          [`link${linkCount + 1}`]: ''\n        }\n      });\n    }\n  };\n  const handleLinkChange = (key, value) => {\n    setCurrentImage({\n      ...currentImage,\n      links: {\n        ...currentImage.links,\n        [key]: value\n      }\n    });\n  };\n  const handleRemoveLink = key => {\n    const {\n      [key]: _,\n      ...remainingLinks\n    } = currentImage.links;\n    setCurrentImage({\n      ...currentImage,\n      links: remainingLinks\n    });\n  };\n  const handleAddImage = () => {\n    setImages([...images, currentImage]);\n    setCurrentImage({\n      Image: '',\n      links: {}\n    });\n  };\n  const handleRemoveImage = index => {\n    const updatedImages = images.filter((_, i) => i !== index);\n    setImages(updatedImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-step step2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Image Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"image-upload\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlfor: \"image-upload\",\n      children: \" click to upload an image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), currentImage.Image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(currentImage.Image),\n        alt: \"Uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link-inputs\",\n        children: [Object.entries(currentImage.links).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: `Link ${index + 1}`,\n            value: value,\n            onChange: e => handleLinkChange(key, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveLink(key),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddLink,\n          children: \"Add Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddImage,\n        children: \"Add Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-images\",\n      children: images.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Uploaded Images: \", images.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(image.Image),\n            alt: `Image ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), Object.entries(image.links).map(([key, value], linkIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Link \", linkIndex + 1, \": \", value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", image.Date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"srcUser: \", image.srcUser]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveImage(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Step2, \"51q5Xx/hUrPX+ntjFv5KcMFFyms=\");\n_c = Step2;\nexport default Step2;\nvar _c;\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Step2","_s","images","setImages","currentImage","setCurrentImage","Image","links","handleImageChange","event","image","target","files","Date","toISOString","srcUser","length","handleAddLink","linkCount","Object","keys","handleLinkChange","key","value","handleRemoveLink","_","remainingLinks","handleAddImage","handleRemoveImage","index","updatedImages","filter","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","accept","onChange","htmlfor","src","URL","createObjectURL","alt","entries","map","placeholder","e","onClick","linkIndex","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Step2.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Step2 = () => {\n  const [images, setImages] = useState([]);\n  const [currentImage, setCurrentImage] = useState({ Image: '', links: {} });\n\n  const handleImageChange = (event) => {\n    const image = event.target.files[0];\n    setCurrentImage({ ...currentImage, Image: image, Date: new Date().toISOString(), srcUser: `User ${images.length + 1}` });\n  };\n\n  const handleAddLink = () => {\n    const { links } = currentImage;\n    const linkCount = Object.keys(links).length;\n    if (linkCount < 5) {\n      setCurrentImage({ ...currentImage, links: { ...links, [`link${linkCount + 1}`]: '' } });\n    }\n  };\n\n  const handleLinkChange = (key, value) => {\n    setCurrentImage({ ...currentImage, links: { ...currentImage.links, [key]: value } });\n  };\n\n  const handleRemoveLink = (key) => {\n    const { [key]: _, ...remainingLinks } = currentImage.links;\n    setCurrentImage({ ...currentImage, links: remainingLinks });\n  };\n\n  const handleAddImage = () => {\n    setImages([...images, currentImage]);\n    setCurrentImage({ Image: '', links: {} });\n  };\n\n  const handleRemoveImage = (index) => {\n    const updatedImages = images.filter((_, i) => i !== index);\n    setImages(updatedImages);\n  };\n\n  return (\n    <div className=\"form-step step2\">\n      <h2>Image Upload</h2>\n      <input id='image-upload' type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n      <label htmlfor='image-upload'> click to upload an image</label>\n      {currentImage.Image && (\n        <div className=\"image-data\">\n          <img src={URL.createObjectURL(currentImage.Image)} alt=\"Uploaded\" />\n          <div className=\"link-inputs\">\n            {Object.entries(currentImage.links).map(([key, value], index) => (\n              <div key={key}>\n                <input type=\"text\"  placeholder={`Link ${index + 1}`} value={value} onChange={(e) => handleLinkChange(key, e.target.value)} />\n                <button onClick={() => handleRemoveLink(key)}>Remove</button>\n              </div>\n            ))}\n            <button onClick={handleAddLink}>Add Link</button>\n          </div>\n          <button onClick={handleAddImage}>Add Image</button>\n        </div>\n      )}\n      <div className=\"uploaded-images\">\n        {images.length > 0 && (\n          <>\n            <h3>Uploaded Images: {images.length}</h3>\n            {images.map((image, index) => (\n              <div key={index} className=\"uploaded-image\">\n                <img src={URL.createObjectURL(image.Image)} alt={`Image ${index + 1}`} />\n                {Object.entries(image.links).map(([key, value], linkIndex) => (\n                  <p key={key}>Link {linkIndex + 1}: {value}</p>\n                ))}\n                <p>Date: {image.Date}</p>\n                <p>srcUser: {image.srcUser}</p>\n                <button onClick={() => handleRemoveImage(index)}>Remove</button>\n              </div>\n            ))}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Step2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}