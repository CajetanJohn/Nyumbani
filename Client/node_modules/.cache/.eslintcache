[{"/data/data/com.termux/files/home/Nyumbani/Client/src/index.js":"1","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Modal/Modal.js":"2","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Header.js":"3","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Map/Map.js":"4","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/Feed.js":"5","/data/data/com.termux/files/home/Nyumbani/Client/src/Assets/Icons/Icons.js":"6","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Menu/Menu.js":"7","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedMap/FeedMap.js":"8","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedInfo/FeedInfo.js":"9","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedPhotos/FeedPhotos.js":"10","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedReviews/FeedReviews.js":"11","/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Form_upload.js":"12","/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Step1.js":"13","/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Step2.js":"14","/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Step3.js":"15"},{"size":3956,"mtime":1692703554241,"results":"16","hashOfConfig":"17"},{"size":953,"mtime":1692627617936,"results":"18","hashOfConfig":"17"},{"size":2678,"mtime":1692627617936,"results":"19","hashOfConfig":"17"},{"size":521,"mtime":1692627617936,"results":"20","hashOfConfig":"17"},{"size":4482,"mtime":1692693710015,"results":"21","hashOfConfig":"17"},{"size":594,"mtime":1692627617928,"results":"22","hashOfConfig":"17"},{"size":4006,"mtime":1692698727118,"results":"23","hashOfConfig":"17"},{"size":252,"mtime":1692627617944,"results":"24","hashOfConfig":"17"},{"size":2176,"mtime":1692690698949,"results":"25","hashOfConfig":"17"},{"size":2939,"mtime":1692632251244,"results":"26","hashOfConfig":"17"},{"size":2101,"mtime":1692693586723,"results":"27","hashOfConfig":"17"},{"size":15735,"mtime":1692796736327,"results":"28","hashOfConfig":"17"},{"size":1125,"mtime":1692701853978,"results":"29","hashOfConfig":"17"},{"size":3336,"mtime":1692741269986,"results":"30","hashOfConfig":"17"},{"size":7404,"mtime":1692778557706,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},"17tgy2",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/data/data/com.termux/files/home/Nyumbani/Client/src/index.js",["88","89"],[],"import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Feed } from './Components/Feed/Feed';\nimport { Header } from './Components/Header/Header';\nimport { Modal } from './Components/Modal/Modal';\nimport { Map } from './Components/Map/Map';\nimport './style.css';\nimport {Menu} from './Components/Header/Menu/Menu';\nimport {Icons} from './Assets/Icons/Icons';\n\nconst getScreenSize = () => {\n  const width = window.innerWidth;\n  if (width <= 768) return 'mobile';\n  if (width <= 1024) return 'laptop';\n  return 'larger';\n};\n\nconst App = () => {\n  const [modal, setModal] = useState(false);\n  const [menu, setMenu] = useState(false);\n  const [mapped, setMap] = useState(false);\n  const [screenSize, setScreenSize] = useState(getScreenSize());\n  const [modalData, setModalData] = useState(null);\n  const feedContainerRef = useRef(null);\n  const [feedItemsCount, setFeedItemsCount] = useState(50);\n  const maxFeeds = 150;\n  const stepSize = 50;\n\n  const toggleModal = useCallback(() => {\n    setModal((prevModal) => !prevModal);\n  }, []);\n\n  const toggleModalWithData = useCallback((data) => {\n    setModalData(data);\n    toggleModal();\n  }, [toggleModal]);\n\n  const toggleMap = useCallback(() => {\n    setMap((prevMap) => !prevMap);\n  }, []);\n  \n  const toggleMenu = useCallback(() => {\n    setMenu((prevMenu) => !prevMenu); \n  }, []); \n\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: `0px 0px ${10 * feedContainerRef.current?.clientHeight}px 0px`,\n      threshold: 1,\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          if (entry.target === feedContainerRef.current?.lastElementChild) {\n            loadMoreFeeds();\n          }\n        }\n      });\n    }, options);\n\n    if (feedContainerRef.current) {\n      observer.observe(feedContainerRef.current.lastElementChild);\n    }\n\n    return () => {\n      if (feedContainerRef.current) {\n        observer.unobserve(feedContainerRef.current.lastElementChild);\n      }\n    };\n  }, [feedItemsCount]);\n\n  const handleResize = () => {\n    setScreenSize(getScreenSize());\n  };\n\n  const loadMoreFeeds = () => {\n    if (feedItemsCount <= maxFeeds) {\n      setFeedItemsCount((prevCount) => Math.min(prevCount + stepSize, maxFeeds));\n    }\n  };\n\n  return (\n    <div className='ui'>\n      <div data-container='scroll' className='feeds-container'>\n        \n        <div data-container='map' className={`map-${screenSize}`} data-shown={`${screenSize === 'mobile' && !mapped ? 'hidden' : 'shown'}`} >\n          <Map toggleModal={toggleModal} />\n        </div>\n        \n        <div className={`feed-${screenSize}`} ref={feedContainerRef} data-container='feed' data-shown={`${screenSize !== 'mobile' || !mapped ? 'shown' : 'hidden'}`}>\n        {<Header modal={modal} toggleMenu={toggleMenu} screenSize={screenSize} />}\n          {[...Array(feedItemsCount)].map((_, index) => (\n            <Feed key={index} count={index + 1} toggleModal={toggleModal} toggleModalWithData={toggleModalWithData} />\n          ))}\n        </div>\n      </div>\n\n      {screenSize === 'mobile' && (\n          <button className='map-toggle-button' onClick={toggleMap}>\n            {!mapped ? ( <div> <img src={Icons.map} alt=\"Map Icon\" /> Map</div> ) : (<div><img src={Icons.card_list} alt=\"Card List Icon\" /> List</div>)}\n          </button>\n        )}\n      \n      {menu && <Menu screen={screenSize} toggleMenu={toggleMenu}/>}\n      \n      {modal && <Modal screen={screenSize} toggleModal={toggleModal} modalData={modalData} />}\n      \n    </div>\n  );\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n",[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Modal/Modal.js",[],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Header.js",["90"],[],"import React, { Component } from 'react';\nimport { Menu } from './Menu/Menu';\nimport './Style.css';\nimport {Icons} from '../../Assets/Icons/Icons';\n\nexport class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mainHeaderRef = React.createRef();\n    this.state = {\n      showMiniHeader: false,\n    };\n  }\n\n  componentDidMount() {\n    const feedContainer = document.querySelector('[data-container=\"scroll\"]');\n    feedContainer.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    const feedContainer = document.querySelector('[data-container=\"scroll\"]');\n    feedContainer.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n  const mainHeaderHeight = this.mainHeaderRef.current?.clientHeight || 0;\n  const scrollThreshold = 50;\n  const currentScrollY = document.querySelector('[data-container=\"scroll\"]').scrollTop;\n\n  if (currentScrollY > mainHeaderHeight) {\n    this.setState({ showMiniHeader: true });\n  } else if (currentScrollY < mainHeaderHeight + scrollThreshold) {\n    this.setState({ showMiniHeader: false });\n  }\n};\n\n\n  render() {\n    const { modal, screenSize, toggleMenu } = this.props;\n    const { showMiniHeader } = this.state;\n\n    if (modal && screenSize === 'mobile') {\n      return null;\n    }\n\n    return (\n      <div className=\"header\">\n        <MainHeader ref={this.mainHeaderRef} toggleMenu={toggleMenu} />\n        <MiniHeader showMiniHeader={showMiniHeader} />\n      </div>\n    );\n  }\n}\n\nconst MainHeader = React.forwardRef((props, ref) => {\n  const handleMenuClick = () => {\n    props.toggleMenu();\n  };\n\n\n  return (\n    <div className='main-header' ref={ref}>\n      <div className='logo-header'>\n        <div className='logo'>Nyumbani</div>\n        <div className='menu'>\n          <img onClick={handleMenuClick} className='icon' src={Icons.user} alt=\"Icon 1\" />\n          <img onClick={handleMenuClick} className='icon' src={Icons.menu} alt=\"Icon 1\" />\n        </div>\n      </div>\n      <div className='filter-header'>\n        <div className='filter-search'>Destination</div>\n        <div className='filter-selection'>\n          <div><b>Sort</b></div>\n          <div><b>Filter</b></div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst MiniHeader = ({ showMiniHeader }) => {\n  return (\n    <div className={`mini-header ${showMiniHeader ? 'slide-down' : ''}`}>\n      <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n      <div>\n        <div className='mini-filter-search'>Destination</div>\n        <div className='mini-filter-selection'>\n          <span><b>Sort</b></span>\n          <span><b>Filter</b></span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Map/Map.js",["91","92"],[],"import React from 'react';\nexport class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMap: false,\n    };\n  }\n\n  toggleMap = () => {\n    this.setState({ showMap: !this.state.showMap });\n  }\n\n  render() {\n    const { showMap } = this.state;\n    const { toggleModal } = this.props;\n\n    return (\n      <div>\n        {/*showMap && <Feed toggleModal={toggleModal} />*/}\n        mapped\n        <button onClick={this.toggleMap}>Toggle Map</button>\n      </div>\n    );\n  }\n}\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/Feed.js",["93"],[],"import React, { Component } from 'react';\nimport './Style.css';\nimport './Loading.css';\nimport { FeedInfo } from './FeedInfo/FeedInfo';\nimport { FeedPhotos } from './FeedPhotos/FeedPhotos';\nimport { FeedReviews } from './FeedReviews/FeedReviews';\nimport { FeedMap } from './FeedMap/FeedMap';\nimport { Icons } from '../../Assets/Icons/Icons';\n\nexport class Feed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      extendedDetailing: false,\n      shownInfo: false,\n      activeSpan: 0,\n      rentalData: null,\n    };\n    this.spanRefs = Array(4).fill(null).map(() => React.createRef());\n  }\n  \n  API_URL = \"http://localhost:5000\";\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(`${this.API_URL}/api/rental/`);\n      const data = await response.json();\n      const firstRental = data[0]; \n      this.setState({ rentalData: firstRental, loading: false });\n    } catch (error) {\n      console.error('Error fetching rental data:', error);\n      this.setState({ loading: false });\n    }\n  }\n\n  handleSpanClick = (index) => {\n    this.setState({ activeSpan: index });\n  };\n\n  toggleShowInfo = () => {\n    this.setState((prevState) => ({ shownInfo: !prevState.shownInfo }));\n  };\n\n  render() {\n    const { loading, shownInfo, activeSpan, rentalData } = this.state;\n\n    if (loading || !rentalData) {\n      return null\n    }\n\n    const {_id, name, location, thumbnailImage, information, userReviews } = rentalData;\n    const { toggleModal, toggleModalWithData } = this.props;\n\n    return (\n      <div feed={loading && 'loading'} className='feed-container'>\n        <div className='displayed-feed-container'>\n          <div className='displayed-feed-header'>\n            <div className='feed-image-container'>\n              <img srcset=\"\" src={thumbnailImage} alt=\"rental thumbnail\"/>\n            </div>\n            <div className='feed-like-button'>\n              <i className=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\n            </div>\n          </div>\n        \n          <div className='displayed-feed-body'>\n            <div className='feed-info category dashed'>\n              <span>{this.props.count}</span>\n              <span></span>\n            </div>\n            <div className='feed-info name dashed'>\n              <h1>{name}</h1>\n            </div>\n            <div className='feed-info rating dashed'>\n              <span><b>{userReviews.rating}</b> - {userReviews.grading} ({userReviews.usersRated})</span>\n              <span> <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i> <b>{location.residence}</b></span>\n            </div>\n          </div>\n        \n          <div className='displayed-feed-footer'>\n            <div className='feed-selection'>\n              <b>{information.houseCategory}</b>\n              <div>\n                {information.vacant\n                  ? information.numberOfHousesVacant + ' vacant' : 'No vacancy!'}\n              </div>\n              <div className='feed-select price'><h1>{information.pricing.price}</h1></div>\n              <div className='feed-select view'>\n                <button onClick={this.toggleShowInfo}>\n                  {!shownInfo ? ( <span><b>View Rental</b></span>\n                  ) : (<span><b> Show less </b></span>)}\n                </button>\n              </div>\n            </div>\n          </div>\n        \n          <div className='feed-info-more'>\n            <span>here <b>hello</b></span>\n          </div>\n        </div>\n\n        {shownInfo && (\n          <div className={`feed-information-container ${shownInfo && 'slide-down'}`}>\n            <div className='feed-information-header'>\n              {['Info', 'Photos', 'Map', 'Review'].map((text, index) => (\n                <span key={index} ref={this.spanRefs[index]} className={activeSpan === index ? 'active' : ''} onClick={() => this.handleSpanClick(index)} > {text} </span> ))}\n            </div>\n            <div className='feed-information-body'>\n              {activeSpan === 0 && <FeedInfo  id={_id}/>}\n              {activeSpan === 1 && <FeedPhotos id={_id}/>}\n              {activeSpan === 3 && <FeedReviews id={_id} toggleModal={toggleModal} toggleModalWithData={toggleModalWithData}/>}\n              {activeSpan === 2 && <FeedMap id={_id}/>}\n            </div>\n            <div className='feed-information-footer'>\n              <button onClick={this.toggleShowInfo}>close</button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Assets/Icons/Icons.js",[],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Menu/Menu.js",["94","95","96","97","98"],[],"import React from 'react';\nimport './Style.css';\nimport {Icons} from '../../../Assets/Icons/Icons';\nimport CreateForm from '../../../Modules/Upload/Form_upload';\n\nexport class Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 'Options',\n    };\n  }\n\n  handleItemClick = (item) => {\n    if (this.state.activeItem === item) {\n      if (item === 'Options') {\n        this.props.toggleMenu();\n      } else {\n        this.setState({ activeItem: 'Options' });\n      }\n    } else {\n      this.setState({ activeItem: item });\n    }\n  };\n\n  renderMenuItemContent = () => {\n    const { activeItem } = this.state;\n\n    switch (activeItem) {\n      case 'Options':\n        return (\n          <div className='options'>\n            <div onClick={() => this.handleItemClick('Recently viewed')} className={activeItem === 'Recently viewed' ? 'active' : ''}>\n              Recently viewed <img className='icon' src={Icons.right}/>\n            </div>\n            <div onClick={() => this.handleItemClick('Help and support')} className={activeItem === 'Help and support' ? 'active' : ''}>\n              Help and support <img className='icon' src={Icons.right} />\n            </div>\n            <div onClick={() => this.handleItemClick('Affiliation')} className={activeItem === 'Affiliation' ? 'active' : ''}>\n              Affiliation <img className='icon' src={Icons.right} />\n            </div>\n            <div onClick={() => this.handleItemClick('Settings')} className={activeItem === 'Settings' ? 'mar active' : 'mar'}>\n              <b>Settings</b>\n            </div>\n            <div onClick={() => this.handleItemClick('Account Settings')} className={activeItem === 'Account Settings' ? 'active' : ''}>\n              Account Settings <img className='icon' src={Icons.right}/>\n            </div>\n            <div onClick={() => this.handleItemClick('Language')} className={activeItem === 'Language' ? 'active' : ''}>\n              Language \n            </div>\n            <div onClick={() => this.handleItemClick('Upload_form')} className={activeItem === 'Upload_form' ? 'active' : ''}>\n              Host rental \n            </div>\n            <div onClick={() => this.handleItemClick('Log out')} className={activeItem === 'Log out' ? 'active' : ''}>\n              <b>Log out</b>\n            </div>\n          </div>\n        );\n      case 'Language':\n        return <LanguageComponent />;\n      case 'Account Settings':\n        return <AccountSettingsComponent />;\n      case 'Recently viewed':\n        return <RecentlyReviewedComponent />;\n      case 'Help and support':\n        return <HelpAndSupportComponent />;\n      case 'Log out':\n        return <LogOutComponent />;\n      case 'Affiliation':\n        return <AffiliationComponent />;\n        case 'Upload_form':\n        return <CreateForm />;\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { screen, toggleMenu } = this.props;\n\n    return (\n      <div className={`menu ${screen}`}>\n        <div className='menu-header'>\n          <span onClick={() => this.handleItemClick('Options')} className='menu-close-button dashed'>\n            <img className='icon' src={Icons.close} alt=\"Icon 1\" />\n          </span>\n          <h5 className='menu-header-heading'>Menu</h5>\n        </div>\n        <div className='menu-body'>\n          {this.renderMenuItemContent()}\n        </div>\n      </div>\n    );\n  }\n}\n\n// Example components to render when menu items are clicked\nconst LanguageComponent = () => <div>\n  <h5> Language </h5>\n</div>;\nconst AccountSettingsComponent = () => <div>\n  <h5> Account Settings</h5>\n  <div className='form'>\n    <span>Personal Information</span>\n    \n  </div>\n</div>;\nconst RecentlyReviewedComponent = () => <div>\n  <h5>Recently Reviewed</h5>\n</div>;\nconst HelpAndSupportComponent = () => <div>\n  <h5>Help and Support</h5>\n</div>;\nconst LogOutComponent = () => <div>Log Out Component</div>;\nconst AffiliationComponent = () => <div>\n  <h5>Affiliation </h5>\n</div>;\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedMap/FeedMap.js",["99","100"],[],"import {useRef, useState} from 'react';\nimport './Style.css';\nimport './Loading.css';\n\nexport const FeedMap = ()=>{\n  const [loading, setLoading] = useState(true);\n  \n return (\n   <div feed={loading && 'loading'} className='feed-map'>\n   </div>\n    )\n}","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedInfo/FeedInfo.js",[],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedPhotos/FeedPhotos.js",["101","102"],[],"import { useRef, useState, useEffect } from 'react';\nimport './Style.css';\nimport './Loading.css';\n\nexport const FeedPhotos = ({ id }) => {\n  const [loading, setLoading] = useState(true);\n  const [photos, setPhotos] = useState([]);\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n\n  useEffect(() => {\n    const fetchPhotos = async () => {\n      try {\n        const response = await fetch(`/api/photos/${id}`);\n        const photosData = await response.json();\n        setPhotos(photosData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching photos:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchPhotos();\n  }, [id]);\n\n  const handleLikeClick = async (photoId) => {\n    try {\n      const response = await fetch(`/api/photos/${photoId}/like`, {\n        method: 'POST',\n      });\n\n      if (response.ok) {\n        setPhotos((prevPhotos) =>\n          prevPhotos.map((photo) =>\n            photo._id === photoId ? { ...photo, likes: photo.likes + 1 } : photo\n          )\n        );\n      }\n    } catch (error) {\n      console.error('Error liking photo:', error);\n    }\n  };\n\n  const handlePrevPhoto = () => {\n    setCurrentPhotoIndex((prevIndex) => (prevIndex === 0 ? photos.length - 1 : prevIndex - 1));\n  };\n\n  const handleNextPhoto = () => {\n    setCurrentPhotoIndex((prevIndex) => (prevIndex === photos.length - 1 ? 0 : prevIndex + 1));\n  };\n\n  return (\n    <div feed={loading && 'loading'} className='feed-information'>\n      <div className='feed-info-details'>\n        {loading ? (\n          <div className='loading-spinner'>Loading...</div>\n        ) : (\n          photos.map((photo, index) => (\n            <div key={index} className={`photo-container ${index === currentPhotoIndex ? 'active' : ''}`}>\n              <a href={photo.imageUrl} target='_blank' rel='noopener noreferrer'>\n                <img src={photo.imageUrl} alt={`Photo ${index}`} />\n              </a>\n              <div className='photo-details'>\n                <span>Likes: {photo.likes}</span>\n                <span>Date Posted: {photo.datePosted}</span>\n                {photo.links && (\n                  <ul>\n                    {photo.links.map((link, linkIndex) => (\n                      <li key={linkIndex}>\n                        <a href={link} target='_blank' rel='noopener noreferrer'>\n                          Link {linkIndex + 1}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n              <button onClick={() => handleLikeClick(photo._id)}>Like</button>\n            </div>\n          ))\n        )}\n        <button className='prev-button' onClick={handlePrevPhoto}>\n          Previous\n        </button>\n        <button className='next-button' onClick={handleNextPhoto}>\n          Next\n        </button>\n      </div>\n      <div className='feed-info-map'></div>\n    </div>\n  );\n};\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedReviews/FeedReviews.js",["103"],[],"import React, { useState, useEffect } from 'react';\nimport './Style.css';\nimport './Loading.css';\nimport { Modal } from '../../Modal/Modal';\n\nconst Review = ({ userRating, reviewMessage, date }) => {\n  return (\n    <div>\n      <h3>{userRating}</h3>\n      <p>{reviewMessage}</p>\n      <p>{date}</p>\n    </div>\n  );\n};\n\nexport const FeedReviews = ({ id }) => {\n  const [reviews, setReviews] = useState([]);\n  const [showAllReviews, setShowAllReviews] = useState(false);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  const API_URL = \"http://localhost:5000\"; \n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`${API_URL}/api/reviews/`);\n        const data = await response.json();\n        setReviews(data[0].userReviews.reviews);\n        setLoading(false); // Set loading to false after fetching data\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    }\n    fetchData();\n  }, [id]);\n\n  const toggleReviews = () => {\n    setShowAllReviews(!showAllReviews);\n  };\n\n  return (\n    <div  className={`reviews-container ${showAllReviews ? 'expanded' : ''}`}>\n      {loading ? (\n        <div feed={loading && 'loading'} className='reviews-container'></div>\n      ) : showAllReviews ? (\n        // Show all reviews when expanded\n        reviews.map((review, index) => (\n          <div key={index}>\n            <Review\n              userRating={review.userRating}\n              reviewMessage={review.reviewMessage}\n              date={review.date}\n            />\n          </div>\n        ))\n      ) : (\n        // Show only the first review initially\n        <div>\n          <Review\n            userRating={reviews[0].userRating}\n            reviewMessage={reviews[0].reviewMessage}\n            date={reviews[0].date}\n          />\n        </div>\n      )}\n      {!loading && (\n      <div className=\"display-more-button\">\n        <span onClick={toggleReviews}>\n          <b>{showAllReviews ? 'Show less reviews' : 'Show more reviews'}</b>\n        </span>\n      </div>\n      )}\n    </div>\n  );\n};\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Form_upload.js",["104","105","106","107","108"],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Step1.js",[],[],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Step2.js",["109"],[],"import React, { useState } from 'react';\n\nconst Step2 = ({ onNext, onPrev }) => {\n  const [images, setImages] = useState([]);\n  const [currentImage, setCurrentImage] = useState({ Image: '', links: {} });\n\n  const handleImageChange = (event) => {\n    const image = event.target.files[0];\n    setCurrentImage({ ...currentImage, Image: image, Date: new Date().toISOString(), srcUser: `User ${images.length + 1}` });\n  };\n\n  const handleAddLink = () => {\n    const { links } = currentImage;\n    const linkCount = Object.keys(links).length;\n    if (linkCount < 5) {\n      setCurrentImage({ ...currentImage, links: { ...links, [`link${linkCount + 1}`]: '' } });\n    }\n  };\n\n  const handleLinkChange = (key, value) => {\n    setCurrentImage({ ...currentImage, links: { ...currentImage.links, [key]: value } });\n  };\n\n  const handleRemoveLink = (key) => {\n    const { [key]: _, ...remainingLinks } = currentImage.links;\n    setCurrentImage({ ...currentImage, links: remainingLinks });\n  };\n\n  const handleUploadImage = () => {\n    if (currentImage.Image) {\n      setImages([...images, currentImage]);\n      setCurrentImage({ Image: '', links: {} });\n    }\n  };\n\n  const handleRemoveImage = (index) => {\n    const updatedImages = images.filter((_, i) => i !== index);\n    setImages(updatedImages);\n  };\n\n  return (\n    <div className=\"form-step step2\">\n      <h2>Upload images of the rental</h2>\n      <div className=\"image-upload\">\n        <input hidden id='image-upload' type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n        <label className='input-label' htmlFor='image-upload'>Click to upload an image</label>\n        <button className='upload-button' onClick={handleUploadImage}>Upload Image</button>\n      </div>\n      {currentImage.Image && (\n        <div className=\"image-data\">\n          <img src={URL.createObjectURL(currentImage.Image)} alt=\"Uploaded\" />\n          <div className=\"link-inputs\">\n            {Object.entries(currentImage.links).map(([key, value], index) => (\n              <div key={key}>\n                <input type=\"text\" placeholder={`Link ${index + 1}`} value={value} onChange={(e) => handleLinkChange(key, e.target.value)} />\n                <button onClick={() => handleRemoveLink(key)}>Remove</button>\n              </div>\n            ))}\n            <button className='image-link' onClick={handleAddLink}>Add Link</button>\n          </div>\n        </div>\n      )}\n      <div className=\"uploaded-images\">\n        {images.length > 0 && (\n          <>\n            <h3>Uploaded Images: {images.length}</h3>\n            {images.map((image, index) => (\n              <div key={index} className=\"uploaded-image\">\n                <img src={URL.createObjectURL(image.Image)} alt={`Image ${index + 1}`} />\n                {Object.entries(image.links).map(([key, value], linkIndex) => (\n                  <p key={key}>Link {linkIndex + 1}: {value}</p>\n                ))}\n                <p>Date: {image.Date}</p>\n                <p>srcUser: {image.srcUser}</p>\n                <button onClick={() => handleRemoveImage(index)}>Remove</button>\n              </div>\n            ))}\n          </>\n        )}\n      </div>\n      <div className=\"step-buttons\">\n        <button onClick={onPrev}>Previous</button>\n        <button onClick={onNext}>Next</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Step2;\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Step3.js",["110","111"],[],{"ruleId":"112","severity":1,"message":"113","line":77,"column":45,"nodeType":"114","endLine":77,"endColumn":52},{"ruleId":"112","severity":1,"message":"115","line":80,"column":6,"nodeType":"116","endLine":80,"endColumn":22,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":2,"column":10,"nodeType":"114","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"118","severity":1,"message":"121","line":15,"column":13,"nodeType":"114","messageId":"120","endLine":15,"endColumn":20},{"ruleId":"118","severity":1,"message":"122","line":16,"column":13,"nodeType":"114","messageId":"120","endLine":16,"endColumn":24},{"ruleId":"118","severity":1,"message":"123","line":8,"column":10,"nodeType":"114","messageId":"120","endLine":8,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":34,"column":31,"nodeType":"126","endLine":34,"endColumn":72},{"ruleId":"124","severity":1,"message":"125","line":37,"column":32,"nodeType":"126","endLine":37,"endColumn":74},{"ruleId":"124","severity":1,"message":"125","line":40,"column":27,"nodeType":"126","endLine":40,"endColumn":69},{"ruleId":"124","severity":1,"message":"125","line":46,"column":32,"nodeType":"126","endLine":46,"endColumn":73},{"ruleId":"118","severity":1,"message":"127","line":79,"column":21,"nodeType":"114","messageId":"120","endLine":79,"endColumn":31},{"ruleId":"118","severity":1,"message":"128","line":1,"column":9,"nodeType":"114","messageId":"120","endLine":1,"endColumn":15},{"ruleId":"118","severity":1,"message":"129","line":6,"column":19,"nodeType":"114","messageId":"120","endLine":6,"endColumn":29},{"ruleId":"118","severity":1,"message":"128","line":1,"column":10,"nodeType":"114","messageId":"120","endLine":1,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":61,"column":17,"nodeType":"126","endLine":61,"endColumn":68},{"ruleId":"118","severity":1,"message":"132","line":4,"column":10,"nodeType":"114","messageId":"120","endLine":4,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":198,"column":3,"nodeType":"135","messageId":"136","endLine":199,"endColumn":192},{"ruleId":"137","severity":1,"message":"138","line":199,"column":84,"nodeType":"139","messageId":"140","endLine":199,"endColumn":136,"fix":"141"},{"ruleId":"137","severity":1,"message":"142","line":199,"column":84,"nodeType":"139","messageId":"140","endLine":199,"endColumn":109,"fix":"143"},{"ruleId":"137","severity":1,"message":"144","line":199,"column":84,"nodeType":"139","messageId":"140","endLine":199,"endColumn":98,"fix":"145"},{"ruleId":"130","severity":1,"message":"131","line":328,"column":21,"nodeType":"126","endLine":328,"endColumn":94},{"ruleId":"130","severity":1,"message":"131","line":69,"column":17,"nodeType":"126","endLine":69,"endColumn":90},{"ruleId":"118","severity":1,"message":"146","line":28,"column":36,"nodeType":"114","messageId":"120","endLine":28,"endColumn":63},{"ruleId":"118","severity":1,"message":"147","line":73,"column":9,"nodeType":"114","messageId":"120","endLine":73,"endColumn":42},"react-hooks/exhaustive-deps","The ref value 'feedContainerRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'feedContainerRef.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","React Hook useEffect has a missing dependency: 'loadMoreFeeds'. Either include it or remove the dependency array.","ArrayExpression",["148"],"no-unused-vars","'Menu' is defined but never used.","unusedVar","'showMap' is assigned a value but never used.","'toggleModal' is assigned a value but never used.","'Icons' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toggleMenu' is assigned a value but never used.","'useRef' is defined but never used.","'setLoading' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Modal' is defined but never used.","no-dupe-class-members","Duplicate name 'handleRulesTextChange'.","PropertyDefinition","unexpected","no-whitespace-before-property","Unexpected whitespace before property join.","MemberExpression","unexpectedWhitespace",{"range":"149","text":"150"},"Unexpected whitespace before property map.",{"range":"151","text":"150"},"Unexpected whitespace before property split.",{"range":"152","text":"150"},"'setHouseCategorySuggestions' is assigned a value but never used.","'handleContactPlatformDetailChange' is assigned a value but never used.",{"desc":"153","fix":"154"},[5468,5470],".",[5442,5444],[5429,5431],"Update the dependencies array to be: [feedItemsCount, loadMoreFeeds]",{"range":"155","text":"156"},[2279,2295],"[feedItemsCount, loadMoreFeeds]"]