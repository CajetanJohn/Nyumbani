[{"/data/data/com.termux/files/home/Nyumbani/Client/src/index.js":"1","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Modal/Modal.js":"2","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Header.js":"3","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Map/Map.js":"4","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/Feed.js":"5","/data/data/com.termux/files/home/Nyumbani/Client/src/Assets/Icons/Icons.js":"6","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Menu/Menu.js":"7","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedMap/FeedMap.js":"8","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedInfo/FeedInfo.js":"9","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedPhotos/FeedPhotos.js":"10","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedReviews/FeedReviews.js":"11"},{"size":3983,"mtime":1692664863520,"results":"12","hashOfConfig":"13"},{"size":953,"mtime":1692627617936,"results":"14","hashOfConfig":"13"},{"size":2678,"mtime":1692627617936,"results":"15","hashOfConfig":"13"},{"size":521,"mtime":1692627617936,"results":"16","hashOfConfig":"13"},{"size":4482,"mtime":1692693710015,"results":"17","hashOfConfig":"13"},{"size":594,"mtime":1692627617928,"results":"18","hashOfConfig":"13"},{"size":3711,"mtime":1692627617932,"results":"19","hashOfConfig":"13"},{"size":252,"mtime":1692627617944,"results":"20","hashOfConfig":"13"},{"size":2176,"mtime":1692690698949,"results":"21","hashOfConfig":"13"},{"size":2939,"mtime":1692632251244,"results":"22","hashOfConfig":"13"},{"size":2101,"mtime":1692693586723,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"17tgy2",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"28"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/data/data/com.termux/files/home/Nyumbani/Client/src/index.js",["64","65"],[],"import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Feed } from './Components/Feed/Feed';\nimport { Header } from './Components/Header/Header';\nimport { Modal } from './Components/Modal/Modal';\nimport { Map } from './Components/Map/Map';\nimport './style.css';\nimport {Menu} from './Components/Header/Menu/Menu';\nimport {Icons} from './Assets/Icons/Icons';\n\nconst getScreenSize = () => {\n  const width = window.innerWidth;\n  if (width <= 768) return 'mobile';\n  if (width <= 1024) return 'laptop';\n  return 'larger';\n};\n\nconst App = () => {\n  const [modal, setModal] = useState(false);\n  const [menu, setMenu] = useState(false);\n  const [mapped, setMap] = useState(false);\n  const [screenSize, setScreenSize] = useState(getScreenSize());\n  const [modalData, setModalData] = useState(null);\n  const feedContainerRef = useRef(null);\n  const [feedItemsCount, setFeedItemsCount] = useState(50);\n  const maxFeeds = 150;\n  const stepSize = 50;\n\n  const toggleModal = useCallback(() => {\n    setModal((prevModal) => !prevModal);\n  }, []);\n\n  const toggleModalWithData = useCallback((data) => {\n    setModalData(data);\n    toggleModal();\n  }, [toggleModal]);\n\n  const toggleMap = useCallback(() => {\n    setMap((prevMap) => !prevMap);\n  }, []);\n  \n  const toggleMenu = useCallback(() => {\n    setMenu((prevMenu) => !prevMenu); \n  }, []); \n\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: `0px 0px ${10 * feedContainerRef.current?.clientHeight}px 0px`,\n      threshold: 1,\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          if (entry.target === feedContainerRef.current?.lastElementChild) {\n            loadMoreFeeds();\n          }\n        }\n      });\n    }, options);\n\n    if (feedContainerRef.current) {\n      observer.observe(feedContainerRef.current.lastElementChild);\n    }\n\n    return () => {\n      if (feedContainerRef.current) {\n        observer.unobserve(feedContainerRef.current.lastElementChild);\n      }\n    };\n  }, [feedItemsCount]);\n\n  const handleResize = () => {\n    setScreenSize(getScreenSize());\n  };\n\n  const loadMoreFeeds = () => {\n    if (feedItemsCount <= maxFeeds) {\n      setFeedItemsCount((prevCount) => Math.min(prevCount + stepSize, maxFeeds));\n    }\n  };\n\n  return (\n    <div className='ui'>\n      <div data-container='scroll' className='feeds-container'>\n        \n        <div data-container='map' className={`map-${screenSize}`} data-shown={`${screenSize === 'mobile' && !mapped ? 'hidden' : 'shown'}`} >\n          <Map toggleModal={toggleModal} />\n        </div>\n        \n        <div className={`feed-${screenSize}`} ref={feedContainerRef} data-container='feed' data-shown={`${screenSize !== 'mobile' || !mapped ? 'shown' : 'hidden'}`}>\n        {screenSize === 'mobile' && <Header modal={modal} toggleMenu={toggleMenu} screenSize={screenSize} />}\n          {[...Array(feedItemsCount)].map((_, index) => (\n            <Feed key={index} count={index + 1} toggleModal={toggleModal} toggleModalWithData={toggleModalWithData} />\n          ))}\n        </div>\n      </div>\n\n      {screenSize === 'mobile' && (\n          <button className='map-toggle-button' onClick={toggleMap}>\n            {!mapped ? ( <div> <img src={Icons.map} alt=\"Map Icon\" /> Map</div> ) : (<div><img src={Icons.card_list} alt=\"Card List Icon\" /> List</div>)}\n          </button>\n        )}\n      \n      {menu && <Menu screen={screenSize} toggleMenu={toggleMenu}/>}\n      \n      {modal && <Modal screen={screenSize} toggleModal={toggleModal} modalData={modalData} />}\n      \n    </div>\n  );\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n",[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Modal/Modal.js",[],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Header.js",["66"],[],"import React, { Component } from 'react';\nimport { Menu } from './Menu/Menu';\nimport './Style.css';\nimport {Icons} from '../../Assets/Icons/Icons';\n\nexport class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mainHeaderRef = React.createRef();\n    this.state = {\n      showMiniHeader: false,\n    };\n  }\n\n  componentDidMount() {\n    const feedContainer = document.querySelector('[data-container=\"scroll\"]');\n    feedContainer.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    const feedContainer = document.querySelector('[data-container=\"scroll\"]');\n    feedContainer.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n  const mainHeaderHeight = this.mainHeaderRef.current?.clientHeight || 0;\n  const scrollThreshold = 50;\n  const currentScrollY = document.querySelector('[data-container=\"scroll\"]').scrollTop;\n\n  if (currentScrollY > mainHeaderHeight) {\n    this.setState({ showMiniHeader: true });\n  } else if (currentScrollY < mainHeaderHeight + scrollThreshold) {\n    this.setState({ showMiniHeader: false });\n  }\n};\n\n\n  render() {\n    const { modal, screenSize, toggleMenu } = this.props;\n    const { showMiniHeader } = this.state;\n\n    if (modal && screenSize === 'mobile') {\n      return null;\n    }\n\n    return (\n      <div className=\"header\">\n        <MainHeader ref={this.mainHeaderRef} toggleMenu={toggleMenu} />\n        <MiniHeader showMiniHeader={showMiniHeader} />\n      </div>\n    );\n  }\n}\n\nconst MainHeader = React.forwardRef((props, ref) => {\n  const handleMenuClick = () => {\n    props.toggleMenu();\n  };\n\n\n  return (\n    <div className='main-header' ref={ref}>\n      <div className='logo-header'>\n        <div className='logo'>Nyumbani</div>\n        <div className='menu'>\n          <img onClick={handleMenuClick} className='icon' src={Icons.user} alt=\"Icon 1\" />\n          <img onClick={handleMenuClick} className='icon' src={Icons.menu} alt=\"Icon 1\" />\n        </div>\n      </div>\n      <div className='filter-header'>\n        <div className='filter-search'>Destination</div>\n        <div className='filter-selection'>\n          <div><b>Sort</b></div>\n          <div><b>Filter</b></div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst MiniHeader = ({ showMiniHeader }) => {\n  return (\n    <div className={`mini-header ${showMiniHeader ? 'slide-down' : ''}`}>\n      <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n      <div>\n        <div className='mini-filter-search'>Destination</div>\n        <div className='mini-filter-selection'>\n          <span><b>Sort</b></span>\n          <span><b>Filter</b></span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Map/Map.js",["67","68"],[],"import React from 'react';\nexport class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMap: false,\n    };\n  }\n\n  toggleMap = () => {\n    this.setState({ showMap: !this.state.showMap });\n  }\n\n  render() {\n    const { showMap } = this.state;\n    const { toggleModal } = this.props;\n\n    return (\n      <div>\n        {/*showMap && <Feed toggleModal={toggleModal} />*/}\n        mapped\n        <button onClick={this.toggleMap}>Toggle Map</button>\n      </div>\n    );\n  }\n}\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/Feed.js",["69"],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Assets/Icons/Icons.js",[],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Menu/Menu.js",["70","71","72","73","74"],[],"import React from 'react';\nimport './Style.css';\nimport {Icons} from '../../../Assets/Icons/Icons'\n\nexport class Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 'Options',\n    };\n  }\n\n  handleItemClick = (item) => {\n    if (this.state.activeItem === item) {\n      if (item === 'Options') {\n        this.props.toggleMenu();\n      } else {\n        this.setState({ activeItem: 'Options' });\n      }\n    } else {\n      this.setState({ activeItem: item });\n    }\n  };\n\n  renderMenuItemContent = () => {\n    const { activeItem } = this.state;\n\n    switch (activeItem) {\n      case 'Options':\n        return (\n          <div className='options'>\n            <div onClick={() => this.handleItemClick('Recently viewed')} className={activeItem === 'Recently viewed' ? 'active' : ''}>\n              Recently viewed <img className='icon' src={Icons.right}/>\n            </div>\n            <div onClick={() => this.handleItemClick('Help and support')} className={activeItem === 'Help and support' ? 'active' : ''}>\n              Help and support <img className='icon' src={Icons.right} />\n            </div>\n            <div onClick={() => this.handleItemClick('Affiliation')} className={activeItem === 'Affiliation' ? 'active' : ''}>\n              Affiliation <img className='icon' src={Icons.right} />\n            </div>\n            <div onClick={() => this.handleItemClick('Settings')} className={activeItem === 'Settings' ? 'mar active' : 'mar'}>\n              <b>Settings</b>\n            </div>\n            <div onClick={() => this.handleItemClick('Account Settings')} className={activeItem === 'Account Settings' ? 'active' : ''}>\n              Account Settings <img className='icon' src={Icons.right}/>\n            </div>\n            <div onClick={() => this.handleItemClick('Language')} className={activeItem === 'Language' ? 'active' : ''}>\n              Language \n            </div>\n            <div onClick={() => this.handleItemClick('Log out')} className={activeItem === 'Log out' ? 'active' : ''}>\n              <b>Log out</b>\n            </div>\n          </div>\n        );\n      case 'Language':\n        return <LanguageComponent />;\n      case 'Account Settings':\n        return <AccountSettingsComponent />;\n      case 'Recently viewed':\n        return <RecentlyReviewedComponent />;\n      case 'Help and support':\n        return <HelpAndSupportComponent />;\n      case 'Log out':\n        return <LogOutComponent />;\n      case 'Affiliation':\n        return <AffiliationComponent />;\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { screen, toggleMenu } = this.props;\n\n    return (\n      <div className={`menu ${screen}`}>\n        <div className='menu-header'>\n          <span onClick={() => this.handleItemClick('Options')} className='menu-close-button dashed'>\n            <img className='icon' src={Icons.close} alt=\"Icon 1\" />\n          </span>\n          <h5 className='menu-header-heading'>Menu</h5>\n        </div>\n        <div className='menu-body'>\n          {this.renderMenuItemContent()}\n        </div>\n      </div>\n    );\n  }\n}\n\n// Example components to render when menu items are clicked\nconst LanguageComponent = () => <div>\n  <h5> Language </h5>\n</div>;\nconst AccountSettingsComponent = () => <div>\n  <h5> Account Settings</h5>\n  <div className='form'>\n    <span>Personal Information</span>\n    \n  </div>\n</div>;\nconst RecentlyReviewedComponent = () => <div>\n  <h5>Recently Reviewed</h5>\n</div>;\nconst HelpAndSupportComponent = () => <div>\n  <h5>Help and Support</h5>\n</div>;\nconst LogOutComponent = () => <div>Log Out Component</div>;\nconst AffiliationComponent = () => <div>\n  <h5>Affiliation </h5>\n</div>;\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedMap/FeedMap.js",["75","76"],[],"import {useRef, useState} from 'react';\nimport './Style.css';\nimport './Loading.css';\n\nexport const FeedMap = ()=>{\n  const [loading, setLoading] = useState(true);\n  \n return (\n   <div feed={loading && 'loading'} className='feed-map'>\n   </div>\n    )\n}","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedInfo/FeedInfo.js",[],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedPhotos/FeedPhotos.js",["77","78"],[],"import { useRef, useState, useEffect } from 'react';\nimport './Style.css';\nimport './Loading.css';\n\nexport const FeedPhotos = ({ id }) => {\n  const [loading, setLoading] = useState(true);\n  const [photos, setPhotos] = useState([]);\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n\n  useEffect(() => {\n    const fetchPhotos = async () => {\n      try {\n        const response = await fetch(`/api/photos/${id}`);\n        const photosData = await response.json();\n        setPhotos(photosData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching photos:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchPhotos();\n  }, [id]);\n\n  const handleLikeClick = async (photoId) => {\n    try {\n      const response = await fetch(`/api/photos/${photoId}/like`, {\n        method: 'POST',\n      });\n\n      if (response.ok) {\n        setPhotos((prevPhotos) =>\n          prevPhotos.map((photo) =>\n            photo._id === photoId ? { ...photo, likes: photo.likes + 1 } : photo\n          )\n        );\n      }\n    } catch (error) {\n      console.error('Error liking photo:', error);\n    }\n  };\n\n  const handlePrevPhoto = () => {\n    setCurrentPhotoIndex((prevIndex) => (prevIndex === 0 ? photos.length - 1 : prevIndex - 1));\n  };\n\n  const handleNextPhoto = () => {\n    setCurrentPhotoIndex((prevIndex) => (prevIndex === photos.length - 1 ? 0 : prevIndex + 1));\n  };\n\n  return (\n    <div feed={loading && 'loading'} className='feed-information'>\n      <div className='feed-info-details'>\n        {loading ? (\n          <div className='loading-spinner'>Loading...</div>\n        ) : (\n          photos.map((photo, index) => (\n            <div key={index} className={`photo-container ${index === currentPhotoIndex ? 'active' : ''}`}>\n              <a href={photo.imageUrl} target='_blank' rel='noopener noreferrer'>\n                <img src={photo.imageUrl} alt={`Photo ${index}`} />\n              </a>\n              <div className='photo-details'>\n                <span>Likes: {photo.likes}</span>\n                <span>Date Posted: {photo.datePosted}</span>\n                {photo.links && (\n                  <ul>\n                    {photo.links.map((link, linkIndex) => (\n                      <li key={linkIndex}>\n                        <a href={link} target='_blank' rel='noopener noreferrer'>\n                          Link {linkIndex + 1}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n              <button onClick={() => handleLikeClick(photo._id)}>Like</button>\n            </div>\n          ))\n        )}\n        <button className='prev-button' onClick={handlePrevPhoto}>\n          Previous\n        </button>\n        <button className='next-button' onClick={handleNextPhoto}>\n          Next\n        </button>\n      </div>\n      <div className='feed-info-map'></div>\n    </div>\n  );\n};\n","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedReviews/FeedReviews.js",["79"],[],{"ruleId":"80","severity":1,"message":"81","line":77,"column":45,"nodeType":"82","endLine":77,"endColumn":52},{"ruleId":"80","severity":1,"message":"83","line":80,"column":6,"nodeType":"84","endLine":80,"endColumn":22,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":10,"nodeType":"82","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"89","line":15,"column":13,"nodeType":"82","messageId":"88","endLine":15,"endColumn":20},{"ruleId":"86","severity":1,"message":"90","line":16,"column":13,"nodeType":"82","messageId":"88","endLine":16,"endColumn":24},{"ruleId":"86","severity":1,"message":"91","line":8,"column":10,"nodeType":"82","messageId":"88","endLine":8,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":33,"column":31,"nodeType":"94","endLine":33,"endColumn":72},{"ruleId":"92","severity":1,"message":"93","line":36,"column":32,"nodeType":"94","endLine":36,"endColumn":74},{"ruleId":"92","severity":1,"message":"93","line":39,"column":27,"nodeType":"94","endLine":39,"endColumn":69},{"ruleId":"92","severity":1,"message":"93","line":45,"column":32,"nodeType":"94","endLine":45,"endColumn":73},{"ruleId":"86","severity":1,"message":"95","line":73,"column":21,"nodeType":"82","messageId":"88","endLine":73,"endColumn":31},{"ruleId":"86","severity":1,"message":"96","line":1,"column":9,"nodeType":"82","messageId":"88","endLine":1,"endColumn":15},{"ruleId":"86","severity":1,"message":"97","line":6,"column":19,"nodeType":"82","messageId":"88","endLine":6,"endColumn":29},{"ruleId":"86","severity":1,"message":"96","line":1,"column":10,"nodeType":"82","messageId":"88","endLine":1,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":61,"column":17,"nodeType":"94","endLine":61,"endColumn":68},{"ruleId":"86","severity":1,"message":"100","line":4,"column":10,"nodeType":"82","messageId":"88","endLine":4,"endColumn":15},"react-hooks/exhaustive-deps","The ref value 'feedContainerRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'feedContainerRef.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","React Hook useEffect has a missing dependency: 'loadMoreFeeds'. Either include it or remove the dependency array.","ArrayExpression",["101"],"no-unused-vars","'Menu' is defined but never used.","unusedVar","'showMap' is assigned a value but never used.","'toggleModal' is assigned a value but never used.","'Icons' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toggleMenu' is assigned a value but never used.","'useRef' is defined but never used.","'setLoading' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Modal' is defined but never used.",{"desc":"102","fix":"103"},"Update the dependencies array to be: [feedItemsCount, loadMoreFeeds]",{"range":"104","text":"105"},[2279,2295],"[feedItemsCount, loadMoreFeeds]"]