[{"/data/data/com.termux/files/home/Nyumbani/Client/src/index.js":"1","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Modal/Modal.js":"2","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Header.js":"3","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Map/Map.js":"4","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/Feed.js":"5","/data/data/com.termux/files/home/Nyumbani/Client/src/Assets/Icons/Icons.js":"6","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Menu/Menu.js":"7","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedMap/FeedMap.js":"8","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedInfo/FeedInfo.js":"9","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedPhotos/FeedPhotos.js":"10","/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedReviews/FeedReviews.js":"11","/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Form_upload.js":"12","/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/ImageUpload.js":"13","/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/rntl_input.js":"14"},{"size":3955,"mtime":1694621921936,"results":"15","hashOfConfig":"16"},{"size":953,"mtime":1694621921920,"results":"17","hashOfConfig":"16"},{"size":2678,"mtime":1694621921912,"results":"18","hashOfConfig":"16"},{"size":521,"mtime":1694621921920,"results":"19","hashOfConfig":"16"},{"size":4482,"mtime":1694621921912,"results":"20","hashOfConfig":"16"},{"size":594,"mtime":1694621921908,"results":"21","hashOfConfig":"16"},{"size":4005,"mtime":1694621921916,"results":"22","hashOfConfig":"16"},{"size":252,"mtime":1694621921912,"results":"23","hashOfConfig":"16"},{"size":2176,"mtime":1694621921912,"results":"24","hashOfConfig":"16"},{"size":2939,"mtime":1694621921912,"results":"25","hashOfConfig":"16"},{"size":2101,"mtime":1694621921912,"results":"26","hashOfConfig":"16"},{"size":15567,"mtime":1693538096047,"results":"27","hashOfConfig":"16"},{"size":4860,"mtime":1693897526512,"results":"28","hashOfConfig":"16"},{"size":13167,"mtime":1694695621543,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17tgy2",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":1,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/data/data/com.termux/files/home/Nyumbani/Client/src/index.js",["76","77"],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Modal/Modal.js",[],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Header.js",["78"],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Map/Map.js",["79","80"],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/Feed.js",["81"],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Assets/Icons/Icons.js",[],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Header/Menu/Menu.js",["82","83","84","85","86"],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedMap/FeedMap.js",["87","88"],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedInfo/FeedInfo.js",[],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedPhotos/FeedPhotos.js",["89","90"],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Components/Feed/FeedReviews/FeedReviews.js",["91"],[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/Form_upload.js",["92","93","94","95","96","97"],[],"import React, { Component } from 'react';\nimport './Style.css';\nimport axios from 'axios';\n\nclass CreateForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n      updatedInformation:{},\n      formData: {\n        name: '',\n        location: {\n          latitude: '',\n          longitude: '',\n          residence: '',\n        },\n      },\n      agency: false,\n      agencyDetails: '',\n      decodedRules: [],\n      houseCategory: '',\n      pricing: {\n        price: '',\n        rentDueDate: '',\n        fineIfRentExceeded: '',\n      },\n      currentImage: { Image: '', links: {} },\n      images: [],\n      amenitiesSuggestions: [\n        'wifi',\n        'pets',\n        'water',\n        'pool',\n        'socials',\n      ],\n      selectedAmenities: [],\n      contactPlatformSuggestions: [\n        'WhatsApp',\n        'Instagram',\n        'Facebook',\n      ],\n      selectedContacts: {},\n      contactPlatformDetail: '',\n      rentFine: false,\n      rulesText: '',\n      houseCategorySuggestions: [\n        'Single Room',\n        'Bedsitter',\n        'Two Rooms',\n        'One Bedroom',\n        // Add more house categories...\n      ],\n    };\n  }\n  \n  handleInputChange = (field, value) => {\n    this.setState(prevState => ({\n      formData: {\n        ...prevState.formData,\n        [field]: value,\n      },\n    }));\n  };\n\n  handleLocationChange = (field, value) => {\n    this.setState(prevState => ({\n      formData: {\n        ...prevState.formData,\n        location: {\n          ...prevState.formData.location,\n          [field]: value,\n        },\n      },\n    }));\n  };\n\n  handleImageChange = event => {\n    const image = event.target.files[0];\n    this.setState(prevState => ({ currentImage: { Image: image, links: {}, }, }));\n    };\n  \n  handleAddLink = () => {\n    const { links } = this.state.currentImage;\n    const linkCount = Object.keys(links).length;\n    if (linkCount < 5) {\n      this.setState(prevState => ({\n        currentImage: { ...prevState.currentImage, links: { ...prevState.currentImage.links, [`link${linkCount + 1}`]: '', }, }, }));\n    } \n  };\n\n  handleLinkChange = (key, value) => {\n    this.setState(prevState => ({\n      currentImage: {\n        ...prevState.currentImage,\n        links: {\n          ...prevState.currentImage.links,\n          [key]: value,\n        },\n      },\n    }));\n  };\n\n  handleRemoveLink = key => {\n    const { [key]: _, ...remainingLinks } = this.state.currentImage.links; this.setState(prevState => ({ currentImage: { ...prevState.currentImage, links: remainingLinks, }, })); }; \n\n  handleUploadImage = () => {\n    const { currentImage } = this.state;\n    if (currentImage.Image) {\n      this.setState(prevState => ({\n        images: [...prevState.images, currentImage],\n        currentImage: { Image: '', links: {} },\n      }));\n    }\n  };\n\n  handleRemoveImage = index => {\n    const updatedImages = this.state.images.filter((_, i) => i !== index);\n    this.setState({\n      images: updatedImages,\n    });\n  };\n\n  handleAmenitiesChange = event => {\n    const amenity = event.target.value;\n    if (amenity && this.state.amenitiesSuggestions.includes(amenity)) {\n      this.setState(prevState => ({\n        selectedAmenities: [...prevState.selectedAmenities, amenity],\n        amenitiesSuggestions: prevState.amenitiesSuggestions.filter(\n          item => item !== amenity\n        ),\n      }));\n      event.target.value = '';\n    }\n  };\n\n  handleRemoveAmenity = amenity => {\n    this.setState(prevState => ({\n      selectedAmenities: prevState.selectedAmenities.filter(\n        item => item !== amenity\n      ),\n      amenitiesSuggestions: [...prevState.amenitiesSuggestions, amenity],\n    }));\n  };\n\n  selectContactPlatform = event => {\n    const platform = event.target.value; this.setState({ contactPlatformDetail: '', }); if (platform && this.state.contactPlatformSuggestions.includes(platform)) { this.setState(prevState => ({ selectedContacts: { ...prevState.selectedContacts, [platform]: '', }, contactPlatformSuggestions: prevState.contactPlatformSuggestions.filter( item => item !== platform ), contactPlatformDetail: '', })); } }; \n    \n  handleRulesTextChange = event => {\n  this.setState({\n    rulesText: event.target.value,\n  });\n};\n\n  handleRemoveContactPlatform = platform => {\n    const updatedContacts = { ...this.state.selectedContacts };\n    delete updatedContacts[platform];\n    this.setState(prevState => ({\n      selectedContacts: updatedContacts,\n      contactPlatformSuggestions: [\n        ...prevState.contactPlatformSuggestions,\n        platform,\n      ],\n    }));\n  };\n\n  handleContactPlatformDetailChange = (platform, value) => {\n    this.setState(prevState => ({ selectedContacts: { ...prevState.selectedContacts, [platform]: value, }, })); };\n    \n  handlePricingChange = (field, value) => {\n    this.setState(prevState => ({\n      pricing: {\n        ...prevState.pricing,\n        [field]: value,\n      },\n    }));\n  };\n\n  handleRentFineChange = () => {\n    this.setState(prevState => ({\n      rentFine: !prevState.rentFine,\n    }));\n  };\n\n  handleAgencyChange = () => {\n    this.setState(prevState => ({\n      agency: !prevState.agency,\n    }));\n  };\n\n  handleAgencyDetailsChange = value => {\n    this.setState({\n      agencyDetails: value,\n    });\n  };\n\n  handleRulesTextChange = event => {\n    const newText = event.target.value.replace(/^# /gm, ''); const formattedText = newText .split('\\n') .map(line => `# ${line}`) .join('\\n'); this.setState({ rulesText: formattedText, }); };\n    \n  handleHouseCategoryChange = value => {\n    this.setState({\n      houseCategory: value,\n    });\n  };\n\n  handleNextStep = data => {\n    const { step } = this.state;\n    const isStepValid = this.validateStep(step);\n    if (isStepValid) {\n      this.setState({\n        formData: { ...this.state.formData, ...data },\n        step: step + 1,\n      });\n    }\n  };\n\n  handlePrevStep = () => {\n    this.setState(prevState => ({\n      step: prevState.step - 1,\n    }));\n  };\n\n  validateStep = step => {\n    const inputs = document.querySelectorAll(`.form-step.step${step} [data-needed='required']`);\n    let isValid = true;\n\n    inputs.forEach(input => {\n      if (!input.value) {\n        isValid = true;\n        input.classList.add('invalid-input');\n      } else {\n        input.classList.remove('invalid-input');\n      }\n    });\n\n    return isValid;\n  };\n\n  handleSubmit = () => {\n    const parsedRules = this.state.decodedRules.map(rule => rule.slice(1));\n    /*if (this.state.agency) {\n      updatedInformation.details.agencyDetails = this.state.agencyDetails;}*/\n    \n    \n    let API_URL = \"\";\n    \n    axios\n      .post(`${API_URL}/api/submit/`, this.updatedInformation)\n      .then(response => {\n        alert('Form submitted successfully!');\n        console.log(response.data);\n      })\n      .catch(error => {\n        alert('An error occurred while submitting the form.');\n        console.error(error);\n      });\n  };\n\n  componentDidMount() {\n    this.setState({\n      rulesText: '# ',\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.rulesText !== this.state.rulesText) {\n      const rules = this.state.rulesText.split('\\n').map(rule => rule.trim());\n      const decodedRules = rules.filter(rule => rule.startsWith('#'));\n      this.setState({\n        decodedRules,\n      });\n    }\n  }\n\n  render() {\n  const { step, formData, currentImage, images, amenitiesSuggestions, selectedAmenities,  contactPlatformSuggestions, selectedContacts, pricing, rentFine, agency, agencyDetails, rulesText, houseCategory, houseCategorySuggestions } = this.state;\n\n  return (\n    <div className=\"create-form-container\">\n      {step === 1 && (\n        <div className=\"form-step step1\">\n          <h3>Rental Information</h3>\n          <input data-needed=\"required\" type=\"text\" placeholder=\"Name\" value={formData.name} onChange={(e) => this.handleInputChange('name', e.target.value)} />\n          <input data-needed=\"required\" type=\"text\" placeholder=\"Latitude\" value={formData.location.latitude} onChange={(e) => this.handleLocationChange('latitude', e.target.value)} />\n          <input data-needed=\"required\" type=\"text\" placeholder=\"Longitude\" value={formData.location.longitude} onChange={(e) => this.handleLocationChange('longitude', e.target.value)} />\n          <input data-needed=\"required\" type=\"text\" placeholder=\"Residence\" value={formData.location.residence} onChange={(e) => this.handleLocationChange('residence', e.target.value)} />\n          <div className=\"form-control\">\n            <button className=\"next-button\" onClick={() => this.handleNextStep(1)}>Next</button>\n          </div>\n        </div>\n      )}\n      {step === 2 && (\n        <div className=\"form-step step2\">\n          <h2>Upload images of the rental</h2>\n          <div className=\"image-upload\">\n            <input data-needed=\"required\" hidden id='image-upload' type=\"file\" accept=\"image/*\" onChange={this.handleImageChange} />\n            <label className='input-label' htmlFor='image-upload'>Click to upload an image</label>\n            <button className='upload-button' onClick={this.handleUploadImage}>Upload Image</button>\n          </div>\n          {currentImage.Image && (\n            <div className=\"image-data\">\n              <img src={URL.createObjectURL(currentImage.Image)} alt=\"Uploaded\" />\n              <div className=\"link-inputs\">\n                {Object.entries(currentImage.links).map(([key, value], index) => (\n                  <div key={key}>\n                    <input data-needed=\"required\" type=\"text\" placeholder={`Link ${index + 1}`} value={value} onChange={(e) => this.handleLinkChange(key, e.target.value)} />\n                    <button onClick={() => this.handleRemoveLink(key)}>Remove</button>\n                  </div>\n                ))}\n                <button className='image-link' onClick={this.handleAddLink}>Add Link</button>\n              </div>\n            </div>\n          )}\n          <div className=\"uploaded-images\">\n            {images.length > 0 && (\n              <>\n                <h3>Uploaded Images: {images.length}</h3>\n                {images.map((image, index) => (\n                  <div key={index} className=\"uploaded-image\">\n                    <img src={URL.createObjectURL(image.Image)} alt={`Image ${index + 1}`} />\n                    {Object.entries(image.links).map(([key, value], linkIndex) => (\n                      <p key={key}>Link {linkIndex + 1}: {value}</p>\n                    ))}\n                    <p>Date: {image.Date}</p>\n                    <p>srcUser: {image.srcUser}</p>\n                    <button onClick={() => this.handleRemoveImage(index)}>Remove</button>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n          <div className=\"form-control\">\n            <button className=\"prev-button\" onClick={this.handlePrevStep}>Back</button>\n            <button className=\"next-button\" onClick={() => this.handleNextStep(2)}>Next</button>\n          </div>\n        </div>\n      )}\n      \n      {step === 3 && (\n        <div className=\"form-step step3\">\n          <h2>Step 3: Information</h2>\n          <div className=\"amenities\">\n            <h3>Amenities</h3>\n            <input type=\"text\" onChange={this.handleAmenitiesChange} placeholder=\"Add Amenities\" list=\"amenities-suggestions\" data-needed=\"required\" />\n            <datalist id=\"amenities-suggestions\">\n            {amenitiesSuggestions.map((amenity, index) => (\n            <option key={index} value={amenity} />))}\n            </datalist>\n            <div className=\"amenities-list\">\n              {selectedAmenities.map((amenity, index) => (<span key={index}> {amenity} \n              <button onClick={() => this.handleRemoveAmenity(amenity)}> Remove </button>\n              </span> ))}\n            </div>\n          </div>\n          \n          <div className=\"contact\">\n            <h3>Contact</h3>\n            <input type=\"text\" onChange={this.selectContactPlatform} list=\"contact-suggestions\" placeholder=\"Select Contact Platform\" data-needed=\"required\" />\n            <datalist id=\"contact-suggestions\">\n              {contactPlatformSuggestions.map((platform, index) => ( <option key={index} value={platform} /> ))}\n            </datalist>\n            <div className=\"selected-contacts\">\n            {Object.keys(selectedContacts).map((platform, index) => (\n              <div key={index} className=\"contact-platform\">\n              {platform}\n                <button onClick={() => this.handleRemoveContactPlatform(platform)}> Remove </button>\n                <input type=\"text\" value={selectedContacts[platform]} onChange={(e) =>\n                this.handleContactPlatformDetailChange(platform, e.target.value)} placeholder={`Enter ${platform} details`} data-needed=\"required\"/>\n              </div> ))}\n            </div>\n          </div>\n          \n          <div className=\"pricing\">\n            <h3>Pricing</h3>\n            <div>\n              <label>Price:</label>\n              <input type=\"number\" value={pricing.price} onChange={(e) =>this.handlePricingChange(\"price\", e.target.value) } data-needed=\"required\" />\n            </div>\n            \n            <div>\n              <label>Rent Due Date:</label>\n              <input type=\"text\" value={pricing.rentDueDate} onChange={(e) => this.handlePricingChange(\"rentDueDate\", e.target.value) } data-needed=\"required\" />\n            </div>\n            \n            <div>\n              <label>\n                <input type=\"checkbox\" checked={rentFine} onChange={this.handleRentFineChange} /> Rent Fine </label>\n            </div>\n            {rentFine && (\n              <div>\n                <label>Fine if Rent Exceeded:</label>\n                <input type=\"number\" value={pricing.fineIfRentExceeded} onChange={(e) => this.handlePricingChange(\"fineIfRentExceeded\", e.target.value)} data-needed=\"required\" />\n              </div>\n            )}\n          </div>\n          \n          \n          <div className=\"agency\">\n            <h3>Agency</h3>\n            <div>\n              <label> <input type=\"checkbox\" checked={agency} onChange={this.handleAgencyChange} /> ABC Rentals\n              </label>\n            </div>\n            {agency && (\n              <div>\n                <input type=\"text\" value={agencyDetails} onChange={(e) => this.handleInputChange(\"agencyDetails\", e.target.value)} placeholder=\"Agency Details\" data-needed=\"required\"/>\n              </div>\n            )}\n        </div>\n        \n        <div className=\"rules\">\n          <h3>Rules</h3>\n          <div>\n            <label>Rules:</label>\n            <textarea rows=\"4\" value={rulesText} onChange={this.handleRulesTextChange} data-needed=\"required\"></textarea>\n          </div>\n        </div>\n        \n        <div className=\"house-category\">\n          <h3>House Category</h3>\n          <div>\n            <label>House Category:</label>\n            <input type=\"text\" value={houseCategory}\n            onChange={(e) =>this.handleInputChange(\"houseCategory\", e.target.value)}list=\"house-suggestions\"data-needed=\"required\" />\n            <datalist id=\"house-suggestions\"> {houseCategorySuggestions.map((suggestion, index) => ( <option key={index} value={suggestion} />))}\n            </datalist>\n          </div>\n        </div>\n        \n        <div className=\"form-control\">\n          <button className=\"prev-button\" onClick={this.handlePrevStep}>Back</button>\n          <button className=\"next-button\" onClick={this.handleSubmit}>Submit</button>\n        </div>\n        \n      </div>)}\n\n    </div>\n  );\n}\n\n}\n\nexport default CreateForm;\n",[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/ImageUpload.js",["98"],[],"import React, { useState, useEffect } from 'react';\nimport EXIF from 'exif-js'; // Import the exif-parser library\nimport './Style.css';\n\nconst imagePlaceholder='https://uploader-assets.s3.ap-south-1.amazonaws.com/codepen-default-placeholder.png';\n\nfunction ImageUpload() {\n  const [imgSrc, setImgSrc] = useState(imagePlaceholder);\n  const [imgList, setImgList] = useState([]);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const [uploadedImages, setUploadedImages] = useState([]);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n\n    if (file) {\n      const imageSrc = URL.createObjectURL(file);\n\n      // Use exif-js to extract date information\n      EXIF.getData(file, function () {\n        const imageDate = EXIF.getTag(this, 'DateTimeOriginal') || '';\n\n        // Create the uploaded image object\n        const uploadedImage = {\n          src: imageSrc,\n          links: [],\n          uploadDate: Date.now(),\n          imageDate,\n          user: 'admin',\n        };\n\n        // Add the uploaded image to the state\n        setUploadedImages([...uploadedImages, uploadedImage]);\n\n        const newImgList = [...imgList, { src: imageSrc, text: '', showTextarea: false }];\n        setImgList(newImgList);\n        setImgSrc(imageSrc);\n        setActiveIndex(newImgList.length - 1);\n      });\n    }\n  };\n  \n  const handleImageClick = (index) => {\n    setImgSrc(imgList[index].src);\n    setActiveIndex(index);\n  };\n\n  const handleToggleTextarea = (index) => {\n    const newImgList = [...imgList];\n    newImgList[index].showTextarea = !newImgList[index].showTextarea;\n    setImgList(newImgList);\n  };\n\n  \n\n  const handleRemoveImage = (index) => {\n    const newImgList = [...imgList];\n    newImgList.splice(index, 1);\n    setImgList(newImgList);\n\n    if (newImgList.length > 0) {\n      setActiveIndex(0);\n    } else {\n      setActiveIndex(null);\n    }\n\n    const newUploadedImages = [...uploadedImages];\n    newUploadedImages.splice(index, 1);\n    setUploadedImages(newUploadedImages);\n    if (index > 0) {\n      handleImageClick(index - 1);\n    } else{\n      setImgSrc(imagePlaceholder)\n    }\n  };\n\n  const handleTextChange = (index, newText) => {\n    const newImgList = [...imgList];\n    newImgList[index].text = newText;\n\n    // Parse user input for links (assuming links are separated by newlines)\n    const newLinks = newText.split('\\n').map((line) => {\n      return { url: line, description: '' };\n    });\n\n    // Update the links property of the uploaded image\n    const updatedUploadedImage = { ...uploadedImages[index], links: newLinks };\n    const newUploadedImages = [...uploadedImages];\n    newUploadedImages[index] = updatedUploadedImage;\n\n    setImgList(newImgList);\n    setUploadedImages(newUploadedImages);\n  };\n\n\n  return (\n    <div className=\"main-wrapper\">\n      <div className=\"img-upload-plugin\">\n        <div className=\"img-upload-handler\">\n          <div className=\"img-preview-big\">\n            <img src={imgSrc} alt=\"Preview\" />\n            {activeIndex !== null && (\n              <div className=\"img-delete\" onClick={() => handleRemoveImage(activeIndex)}>\n              <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"img-preview-operate\">\n          <div className=\"img-holder\">\n            {imgList.map((img, index) => (\n              <div key={index} className={`img-preview-small ${index === activeIndex ? 'img-small-selected' : ''}`} onClick={() => handleImageClick(index)}>\n                <img src={img.src} alt=\"Preview\" />\n              </div>\n            ))}\n          </div>\n          <button className=\"img-add-more\" onClick={() => document.querySelector('input[type=\"file\"]').click()}>\n            <img src=\"https://uploader-assets.s3.ap-south-1.amazonaws.com/codepen-add-more-btn.png\" alt=\"Add\" />\n          </button>\n        </div>\n        <input type=\"file\" name=\"img-upload-input\" style={{ display: 'none' }} onChange={handleFileChange} />\n      </div>\n      <div className=\"text-preview\">\n        {activeIndex !== null && (\n          <div className=\"formatted-links\">\n            {imgList[activeIndex].showTextarea ? (\n              <textarea\n                value={imgList[activeIndex].text}\n                onChange={(e) => handleTextChange(activeIndex, e.target.value)}\n                placeholder=\"Enter text...\"\n              ></textarea>\n            ) : (\n              imgList[activeIndex].text.split('\\n').map((line, index) => (\n                <p key={index}>{line}</p>\n              ))\n            )}\n            <button className=\"toggle-textarea\" onClick={() => handleToggleTextarea(activeIndex)}>\n              {imgList[activeIndex].showTextarea ? 'Hide' : 'Customize'}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ImageUpload;\n",[],"/data/data/com.termux/files/home/Nyumbani/Client/src/Modules/Upload/rntl_input.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],[],{"ruleId":"114","severity":1,"message":"115","line":77,"column":45,"nodeType":"116","endLine":77,"endColumn":52},{"ruleId":"114","severity":1,"message":"117","line":80,"column":6,"nodeType":"118","endLine":80,"endColumn":22,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":10,"nodeType":"116","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"120","severity":1,"message":"123","line":15,"column":13,"nodeType":"116","messageId":"122","endLine":15,"endColumn":20},{"ruleId":"120","severity":1,"message":"124","line":16,"column":13,"nodeType":"116","messageId":"122","endLine":16,"endColumn":24},{"ruleId":"120","severity":1,"message":"125","line":8,"column":10,"nodeType":"116","messageId":"122","endLine":8,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":34,"column":31,"nodeType":"128","endLine":34,"endColumn":72},{"ruleId":"126","severity":1,"message":"127","line":37,"column":32,"nodeType":"128","endLine":37,"endColumn":74},{"ruleId":"126","severity":1,"message":"127","line":40,"column":27,"nodeType":"128","endLine":40,"endColumn":69},{"ruleId":"126","severity":1,"message":"127","line":46,"column":32,"nodeType":"128","endLine":46,"endColumn":73},{"ruleId":"120","severity":1,"message":"129","line":79,"column":21,"nodeType":"116","messageId":"122","endLine":79,"endColumn":31},{"ruleId":"120","severity":1,"message":"130","line":1,"column":9,"nodeType":"116","messageId":"122","endLine":1,"endColumn":15},{"ruleId":"120","severity":1,"message":"131","line":6,"column":19,"nodeType":"116","messageId":"122","endLine":6,"endColumn":29},{"ruleId":"120","severity":1,"message":"130","line":1,"column":10,"nodeType":"116","messageId":"122","endLine":1,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":61,"column":17,"nodeType":"128","endLine":61,"endColumn":68},{"ruleId":"120","severity":1,"message":"134","line":4,"column":10,"nodeType":"116","messageId":"122","endLine":4,"endColumn":15},{"ruleId":"135","severity":1,"message":"136","line":197,"column":3,"nodeType":"137","messageId":"138","endLine":198,"endColumn":192},{"ruleId":"139","severity":1,"message":"140","line":198,"column":84,"nodeType":"141","messageId":"142","endLine":198,"endColumn":136,"fix":"143"},{"ruleId":"139","severity":1,"message":"144","line":198,"column":84,"nodeType":"141","messageId":"142","endLine":198,"endColumn":109,"fix":"145"},{"ruleId":"139","severity":1,"message":"146","line":198,"column":84,"nodeType":"141","messageId":"142","endLine":198,"endColumn":98,"fix":"147"},{"ruleId":"120","severity":1,"message":"148","line":240,"column":11,"nodeType":"116","messageId":"122","endLine":240,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":320,"column":21,"nodeType":"128","endLine":320,"endColumn":94},{"ruleId":"120","severity":1,"message":"149","line":1,"column":27,"nodeType":"116","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"150","line":10,"column":6,"nodeType":"118","endLine":10,"endColumn":27,"suggestions":"151"},{"ruleId":"114","severity":1,"message":"152","line":14,"column":6,"nodeType":"118","endLine":14,"endColumn":8,"suggestions":"153"},{"ruleId":"120","severity":1,"message":"154","line":86,"column":20,"nodeType":"116","messageId":"122","endLine":86,"endColumn":31},{"ruleId":"114","severity":1,"message":"150","line":91,"column":5,"nodeType":"118","endLine":91,"endColumn":26,"suggestions":"155"},{"ruleId":"114","severity":1,"message":"152","line":95,"column":5,"nodeType":"118","endLine":95,"endColumn":7,"suggestions":"156"},{"ruleId":"114","severity":1,"message":"157","line":153,"column":5,"nodeType":"118","endLine":153,"endColumn":12,"suggestions":"158"},{"ruleId":"120","severity":1,"message":"154","line":169,"column":20,"nodeType":"116","messageId":"122","endLine":169,"endColumn":31},{"ruleId":"114","severity":1,"message":"150","line":173,"column":5,"nodeType":"118","endLine":173,"endColumn":22,"suggestions":"159"},{"ruleId":"120","severity":1,"message":"154","line":223,"column":20,"nodeType":"116","messageId":"122","endLine":223,"endColumn":31},{"ruleId":"120","severity":1,"message":"154","line":265,"column":20,"nodeType":"116","messageId":"122","endLine":265,"endColumn":31},{"ruleId":"114","severity":1,"message":"160","line":277,"column":6,"nodeType":"118","endLine":277,"endColumn":27,"suggestions":"161"},{"ruleId":"120","severity":1,"message":"154","line":304,"column":20,"nodeType":"116","messageId":"122","endLine":304,"endColumn":31},{"ruleId":"114","severity":1,"message":"150","line":326,"column":6,"nodeType":"118","endLine":326,"endColumn":43,"suggestions":"162"},{"ruleId":"163","severity":2,"message":"164","line":364,"column":7,"nodeType":"116","messageId":"165","endLine":364,"endColumn":15},{"ruleId":"120","severity":1,"message":"166","line":409,"column":18,"nodeType":"116","messageId":"122","endLine":409,"endColumn":27},"react-hooks/exhaustive-deps","The ref value 'feedContainerRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'feedContainerRef.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","React Hook useEffect has a missing dependency: 'loadMoreFeeds'. Either include it or remove the dependency array.","ArrayExpression",["167"],"no-unused-vars","'Menu' is defined but never used.","unusedVar","'showMap' is assigned a value but never used.","'toggleModal' is assigned a value but never used.","'Icons' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toggleMenu' is assigned a value but never used.","'useRef' is defined but never used.","'setLoading' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Modal' is defined but never used.","no-dupe-class-members","Duplicate name 'handleRulesTextChange'.","PropertyDefinition","unexpected","no-whitespace-before-property","Unexpected whitespace before property join.","MemberExpression","unexpectedWhitespace",{"range":"168","text":"169"},"Unexpected whitespace before property map.",{"range":"170","text":"169"},"Unexpected whitespace before property split.",{"range":"171","text":"169"},"'parsedRules' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'name' and 'onChange'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["172"],"React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array. If 'setSuggestions' needs the current value of 'options', you can also switch to useReducer instead of useState and read 'options' in the reducer.",["173"],"'setValidity' is assigned a value but never used.",["174"],["175"],"React Hook useEffect has missing dependencies: 'inputValue', 'name', and 'onChange'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["176"],["177"],"React Hook useEffect has missing dependencies: 'name' and 'validity'. Either include them or remove the dependency array.",["178"],["179"],"no-undef","'required' is not defined.","undef","'setErrors' is assigned a value but never used.",{"desc":"180","fix":"181"},[5446,5448],".",[5420,5422],[5407,5409],{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"182","fix":"186"},{"desc":"184","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [feedItemsCount, loadMoreFeeds]",{"range":"196","text":"197"},"Update the dependencies array to be: [name, onChange, selectedSuggestions]",{"range":"198","text":"199"},"Update the dependencies array to be: [options]",{"range":"200","text":"201"},{"range":"202","text":"199"},{"range":"203","text":"201"},"Update the dependencies array to be: [inputValue, name, onChange, valid]",{"range":"204","text":"205"},"Update the dependencies array to be: [name, onChange, rules, validity]",{"range":"206","text":"207"},"Update the dependencies array to be: [InputData, name, onChange, validity]",{"range":"208","text":"209"},"Update the dependencies array to be: [validity, review, rating, userEmail, onChange, name]",{"range":"210","text":"211"},[2279,2295],"[feedItemsCount, loadMoreFeeds]",[381,402],"[name, onChange, selectedSuggestions]",[460,462],"[options]",[2824,2845],[2900,2902],[4618,4625],"[inputValue, name, onChange, valid]",[5440,5457],"[name, onChange, rules, validity]",[8503,8524],"[InputData, name, onChange, validity]",[9840,9877],"[validity, review, rating, userEmail, onChange, name]"]